trigger:
  branches:
    include:
    - '*'

variables:
  buildConfiguration: 'Debug'
  isDevelopment: contains(variables['build.sourceBranch'], 'development')
  isMain: contains(variables['build.sourceBranch'], 'main')

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    jobs:
    - job: 'API_Build_And_Test'
      steps:
      - template: Pipelines/Api/Templates/build-test.yml
        parameters:
          buildConfiguration:  variables.buildConfiguration
          projectsFilter: '**/*.csproj'
          testProjectsFilter: '**/*Tests.csproj'
          runImplementationTests: true
          runUnitTests: true
          ${{ if or(eq(variables.isDevelopment, true), eq(variables.isMain, true)) }}:
            runIntegrationTests: true
          ${{ if eq(variables.isMain, true) }}:
            runSmokeTests: true
          ${{ if or(eq(variables.isDevelopment, true), eq(variables.isMain, true)) }}:
            publishArtifact: true

  - stage: deploy_dev
    dependsOn: build
    condition: eq(variables.isDevelopment, true)
    jobs:
    - deployment: deploy
      displayName: Deploy
      environment: development
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureRmWebAppDeployment@4
              displayName: 'Deploy API'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'COM-DEV-GOLD (31.04.2021)'
                appType: 'webApp'
                WebAppName: 'app-zoo-dev'
                packageForLinux: '$(System.ArtifactsDirectory)/drop/AspNetCore.zip'