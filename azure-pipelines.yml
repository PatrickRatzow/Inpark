trigger:
  branches:
    include:
    - '*'

variables:
  buildConfiguration: 'Debug'
  isDevelopment: contains(variables['build.sourceBranch'], 'development')
  isMain: contains(variables['build.sourceBranch'], 'main')

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    jobs:
    - job: 'api_build_and_test'
      displayName: 'API Build & Test'
      steps:
      - script: echo $(isDevelopment)
      - script: echo $(isMain)
      - template: Pipelines/Api/Templates/build-test.yml
        parameters:
          buildConfiguration:  $(buildConfiguration)
          projectsFilter: '**/*.csproj'
          testProjectsFilter: '**/*Tests.csproj'
          runImplementationTests: 'true'
          runUnitTests: 'true'

  - stage: deploy_dev
    dependsOn: build
    condition: $(isDevelopment)
    displayName: 'Deploy App to Dev Slot'
    jobs:
      - job:  deploy
        displayName: 'Deploy API'
        steps:
        - task: DownloadBuildArtifacts@0
          displayName: 'Download Artifacts'
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(System.ArtifactsDirectory)'
        - task: AzureRmWebAppDeployment@4
          displayName: 'Deploy API'
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'sc-zoo-dev'
            appType: 'webApp'
            WebAppName: 'app-zoo-dev'
            deployToSlotOrASE: true
            ResourceGroupName: 'rg-zoo-dev'
            packageForLinux: '$(System.DefaultWorkingDirectory)/drop/AspNetCore.zip'